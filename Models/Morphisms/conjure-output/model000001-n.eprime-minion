MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 2
# CSE_active_eliminated_expressions = 12
# CSE_active_total_size = 6
**VARIABLES**
DISCRETE M_FunctionND_00001_00002 #
{0..3}
DISCRETE J_FunctionND_00001_00002 #
{0..3}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00001_00002, [0,0,2,3])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 6 occurrences of this expression or equivalent: (1 + M_FunctionND_00001_00002)
{1..4}
DISCRETE aux1 #Active-CSE: 6 occurrences of this expression or equivalent: (1 + J_FunctionND_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,3,4])
**VARIABLES**
**SEARCH**
PRINT[[M_FunctionND_00001_00002],[J_FunctionND_00001_00002]]
**CONSTRAINTS**
watchelement_one([0, 0, 0, 0], aux0, 0)
watchelement_one([0, 1, M_FunctionND_00001_00002, 1], aux0, M_FunctionND_00001_00002)
watchelement_one([0, M_FunctionND_00001_00002, 2, 2], aux0, M_FunctionND_00001_00002)
watchelement_one([0, 1, 2, 3], aux0, M_FunctionND_00001_00002)
watchelement_one([0, 1, 2, 3], aux1, J_FunctionND_00001_00002)
watchelement_one([1, 1, J_FunctionND_00001_00002, 3], aux1, J_FunctionND_00001_00002)
watchelement_one([2, J_FunctionND_00001_00002, 2, 3], aux1, J_FunctionND_00001_00002)
watchelement_one([3, 3, 3, 3], aux1, 3)
watchelement_one([0, 1, M_FunctionND_00001_00002, 1], aux1, 1)
watchelement_one([0, M_FunctionND_00001_00002, 2, 2], aux1, 2)
watchelement_one([1, 1, J_FunctionND_00001_00002, 3], aux0, 1)
watchelement_one([2, J_FunctionND_00001_00002, 2, 3], aux0, 2)
sumleq([1,M_FunctionND_00001_00002],aux0)
sumgeq([1,M_FunctionND_00001_00002],aux0)
sumleq([1,J_FunctionND_00001_00002],aux1)
sumgeq([1,J_FunctionND_00001_00002],aux1)
**EOF**
